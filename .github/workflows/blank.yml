# This is a basic workflow to help you get started with Actions

# This is a basic workflow to help you get started with Actions

name: CI-CD

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
#   push:
#     branches: [ master ]
#   pull_request:
#     branches: [ master ]
    watch:
     types: [started]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  authorize: 
    runs-on: ubuntu-latest

    steps:
    - uses: octokit/request-action@v2.0.0
      with:
        route: GET /repos/:repository/collaborators/${{ github.actor }}
        repository: ${{ github.repository }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
 
  # This workflow contains a single job called "build"
  build:
    needs: [authorize]
    # The type of runner that the job will run on
    runs-on: self-hosted

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2
      with:
        lfs: true
        submodules: true

    # Runs a set of commands using the runners shell
    - name: Run a Build script
      run: |
        cd src
        mkdir out
        javac Hello.java -d out/
        cd out
        java Hello
    
    - name: get commid id for the Build
      run: echo ::set-env name=GITHUB_SHA_SHORT::$(echo $GITHUB_SHA | cut -c 1-12)
    
    - name: Upload Bianary Zip
      uses: actions/upload-artifact@v1.0.0
      env:
          VERSION: "v20.04"
          BUILD: "100"
      with:
        name: ${{ env.VERSION }}-${{ env.GITHUB_SHA_SHORT }}-${{ env.BUILD }}
        path: src/uploaadArchiveTest
