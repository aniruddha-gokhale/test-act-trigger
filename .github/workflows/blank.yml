# This is a basic workflow to help you get started with Actions

# This is a basic workflow to help you get started with Actions

name: CI-CD

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]
#   pull_request:
#     branches: [ master ]
#     watch:
#      types: [started]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    #if: "contains(github.event.commits[0].message, '[generate-daily-build]')"  
    runs-on: self-hosted
    
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2
      with:
        lfs: true
        submodules: true
      
    - name : check-buildInfo file is changed
      run: |
        if git diff-tree --no-commit-id --name-only -r ${{ github.sha }} | grep -q 'buildInfo.json'; then
          echo ::set-env name=BUILD::true
          echo "matched"
        else
          echo ::set-env name=BUILD::false
          echo "matched -not"
        fi
    
    # Runs a set of commands using the runners shell
    - name: Run a Build script
      run: |
        echo ${{ env.BUILD }}
        cd src
        mkdir out
        javac Hello.java -d out/
        cd out
        java Hello
    
    - name: Get Latest Build number, Version, Git sha
      env:
        VERSION: "v20.04"
        BUILD: "TB1"
      run: |
        echo ::set-env name=BUILD_INFO::${{ env.VERSION }}-$(echo $GITHUB_SHA | cut -c 1-12)-${{ env.BUILD }}
      
    - name: Creating a distribution zip
      run: |
        cd src
        mv out ${{ env.BUILD_INFO }}
        zip -r ${{ env.BUILD_INFO }}.zip ${{ env.BUILD_INFO }}
